{"version":3,"sources":["components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/auth/LogIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/projects/ProjectDetails.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["Notifications","props","notifications","className","map","note","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","format","ProjectList","projects","to","Dashboard","this","auth","uid","Component","compose","connect","state","firestore","ordered","firebase","firestoreConnect","collection","orderBy","limit","dispatch","signOut","getState","getFirebase","then","type","onClick","profile","initials","SignedOutLinks","console","log","links","isLoaded","LogIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","error","ownProps","match","params","data","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","presence","sessions","AuthIsLoaded","children","useSelector","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73bbbcb6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map((note) => {\r\n                return (\r\n                  <li key={note.id}>\r\n                    <span className=\"pink-text\">{note.user} </span>\r\n                    <span> {note.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(note.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p className=\"card-action black-text\">{project.content}</p>\r\n      </div>\r\n      <div className=\"card-action grey lighten-4 grey-text\">\r\n        <div>\r\n          Posted by {project.authorFirstName} {project.authorLastName}\r\n        </div>\r\n        <div>\r\n          {moment(project.createdAt.toDate()).format(\"DD MMM, YYYY, HH:mm\")}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map((project) => {\r\n          return (\r\n            <Link to={`/project/${project.id}`} key={project.id}>\r\n              <ProjectSummary project={project} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/login\" />;\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {\r\n      collection: \"projects\",\r\n      orderBy: [\"createdAt\", \"desc\"],\r\n    },\r\n    {\r\n      collection: \"notifications\",\r\n      limit: 3,\r\n      orderBy: [\"time\", \"desc\"],\r\n    },\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"\" onClick={props.signOut}>\r\n          Log Out\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0],\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Sign Up</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/login\">Log In</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isLoaded } from \"react-redux-firebase\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n\r\n  console.log(\"in navbar profile =\", profile);\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          Projects\r\n        </Link>\r\n        {isLoaded(auth) && links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass LogIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.signIn(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Log In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Log In</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.signUp(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/login\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // Make async call to database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date(),\r\n      })\r\n      .then(() => {\r\n        // Caryy on with the dispatch\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", error });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/login\" />;\r\n\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>\r\n              Posted by {project.authorFirstName} {project.authorLastName}\r\n            </div>\r\n            <div>\r\n              {moment(project.createdAt.toDate()).format(\"DD MMM, YYYY, HH:mm\")}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n\r\n  return {\r\n    project,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Navbar from \"./components/layout/Navbar\";\nimport LogIn from \"./components/auth/LogIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/login\" component={LogIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null,\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login error\");\r\n      return {\r\n        ...state,\r\n        authError: \"Login failed\",\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"login success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: \"1\", title: \"help me find peach\", content: \"blah blah blah\" },\r\n    { id: \"2\", title: \"collect all the stars\", content: \"blah blah blah\" },\r\n    { id: \"3\", title: \"egg hunt with yoshi\", content: \"blah blah blah\" },\r\n  ],\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"Created project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"ERROR: Create project error\", action.error);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// Your web app's Firebase configuration\r\nvar fbConfig = {\r\n  apiKey: \"AIzaSyC-TYORpyNzrGe7Z__FWKMXiSCnyqJX93E\",\r\n  authDomain: \"project-plan-1398c.firebaseapp.com\",\r\n  databaseURL: \"https://project-plan-1398c.firebaseio.com\",\r\n  projectId: \"project-plan-1398c\",\r\n  storageBucket: \"project-plan-1398c.appspot.com\",\r\n  messagingSenderId: \"379823609165\",\r\n  appId: \"1:379823609165:web:21a372d660f0985abd9304\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(fbConfig);\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider, useSelector } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance,\n} from \"redux-firestore\";\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase,\n  isLoaded,\n} from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  presence: \"presence\",\n  sessions: \"sessions\",\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n  return children;\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}